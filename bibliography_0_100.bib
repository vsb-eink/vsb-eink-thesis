
@misc{VsbeinkVsbeinkmqttgwcli,
	title = {vsb-eink/vsb-eink-mqtt-gw-cli},
	url = {https://github.com/vsb-eink/vsb-eink-mqtt-gw-cli},
	urldate = {2024-04-29},
}

@misc{IntroductionMQTTProtocol2019,
	title = {Introduction to {MQTT} 5 {Protocol} - {MQTT} 5 {Essentials} {Part} 1},
	url = {https://www.hivemq.com/blog/mqtt5-essentials-part1-introduction-to-mqtt-5/},
	abstract = {Get a quick introduction to MQTT 5 protocol and how features enhanced capabilities compared to MQTT 3.1.1.},
	language = {en},
	urldate = {2024-04-25},
	month = oct,
	year = {2019},
	note = {Section: blog},
}

@misc{Inkplate10hardwareSchematicsGerber,
	title = {Inkplate-10-hardware/{Schematics}, {Gerber}, {BOM}/v1.0/{Inkplate10} schematics v1.0.pdf at main ¬∑ {SolderedElectronics}/{Inkplate}-10-hardware},
	url = {https://github.com/SolderedElectronics/Inkplate-10-hardware/blob/main/Schematics%2C%20Gerber%2C%20BOM/v1.0/Inkplate10%20schematics%20v1.0.pdf},
	urldate = {2024-04-20},
}

@misc{FixedInvalidState,
	title = {Fixed invalid state error when {joinAP} fails to connect ¬∑ tajnymag/{ESP}-{IDF}-{InkPlate}@6ad4335},
	url = {https://github.com/tajnymag/ESP-IDF-InkPlate/commit/6ad4335897aa517875574df4b509589f391106bd},
	urldate = {2024-04-20},
}

@misc{FixedAPReconnection,
	title = {Fixed {AP} reconnection not working properly due to default netif not b‚Ä¶ ¬∑ tajnymag/{ESP}-{IDF}-{InkPlate}@dec2eea},
	url = {https://github.com/tajnymag/ESP-IDF-InkPlate/commit/dec2eea2d9c19adab4dfd6fccb12d4f3773b8bd7},
	abstract = {‚Ä¶eing destroyed},
	language = {en},
	urldate = {2024-04-20},
	journal = {GitHub},
}

@misc{ULPCoprocessorProgramming,
	title = {{ULP} {Coprocessor} {Programming} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/ulp.html},
	urldate = {2024-04-20},
}

@misc{KaitaiioKaitai_struct2024,
	title = {kaitai-io/kaitai\_struct},
	url = {https://github.com/kaitai-io/kaitai_struct},
	abstract = {Kaitai Struct: declarative language to generate binary data parsers in C++ / C\# / Go / Java / JavaScript / Lua / Nim / Perl / PHP / Python / Ruby},
	urldate = {2024-04-19},
	publisher = {Kaitai team},
	month = apr,
	year = {2024},
	note = {original-date: 2016-02-20T15:17:00Z},
	keywords = {c-plus-plus, cpp, csharp, declarative-language, file-format, go, golang, graphviz, java, javascript, lua, nim, perl, php, protocol-analyser, python, reverse-engineering, ruby},
}

@misc{UnderstandingGitHubActions,
	title = {Understanding {GitHub} {Actions}},
	url = {https://docs.github.com/_next/data/ScUUoqQyxuF_h0BC_EVzh/en/free-pro-team@latest/actions/learn-github-actions/understanding-github-actions.json?versionId=free-pro-team%40latest&productId=actions&restPage=learn-github-actions&restPage=understanding-github-actions},
	abstract = {Learn the basics of GitHub Actions, including core concepts and essential terminology.},
	language = {en},
	urldate = {2024-04-19},
	journal = {GitHub Docs},
}

@misc{FeaturesGitHubActions2024,
	title = {Features ‚Ä¢ {GitHub} {Actions}},
	url = {https://github.com/features/actions},
	abstract = {Easily build, package, release, update, and deploy your project in any language‚Äîon GitHub or any external system‚Äîwithout having to run code yourself.},
	language = {en},
	urldate = {2024-04-19},
	journal = {GitHub},
	year = {2024},
}

@misc{NATSIo,
	title = {{NATS}.io},
	url = {https://nats.io/},
	abstract = {NATS is a connective technology powering modern distributed systems, unifying Cloud, On-Premise, Edge, and IoT.},
	language = {en-us},
	urldate = {2024-04-19},
	journal = {NATS.io},
}

@misc{RabbitMQOneBroker,
	title = {{RabbitMQ}: {One} broker to queue them all {\textbar} {RabbitMQ}},
	shorttitle = {{RabbitMQ}},
	url = {https://www.rabbitmq.com/},
	language = {en},
	urldate = {2024-04-19},
}

@misc{RedisRealtimeData,
	title = {Redis - {The} {Real}-time {Data} {Platform}},
	url = {https://redis.io/},
	abstract = {Developers love Redis. Unlock the full potential of the Redis database with Redis Enterprise and start building blazing fast apps.},
	language = {en},
	urldate = {2024-04-19},
	journal = {Redis},
}

@article{knuthDigitalHalftonesDot1987,
	title = {Digital halftones by dot diffusion},
	volume = {6},
	issn = {0730-0301, 1557-7368},
	url = {https://dl.acm.org/doi/10.1145/35039.35040},
	doi = {10.1145/35039.35040},
	abstract = {This paper describes a technique for approximating real-valued pixels by two-valued pixels. The new method, called dot diffusion, appears to avoid some deficiencies of other commonly used techniques. It requires approximately the same total number of arithmetic operations as the Floyd-Steinberg method of adaptive grayscale, and it is well suited to parallel computation; but it requires more buffers and more complex program logic than other methods when implemented sequentially. A ‚Äúsmooth‚Äù variant of the method may prove to be useful in high-resolution printing.},
	language = {en},
	number = {4},
	urldate = {2024-04-19},
	journal = {ACM Transactions on Graphics},
	author = {Knuth, Donald E.},
	month = oct,
	year = {1987},
	pages = {245--273},
}

@misc{hellandImageDitheringEleven2012,
	title = {Image {Dithering}: {Eleven} {Algorithms} and {Source} {Code}},
	shorttitle = {Image {Dithering}},
	url = {https://tannerhelland.com/2012/12/28/dithering-eleven-algorithms-source-code.html},
	abstract = {Dithering is still a surprisingly applicable technique, not just for practical reasons (such as preparing a full-color image for output on a non-color printer), but for artistic reasons as well. Dithering also has applications in web design, where it is a useful technique for reducing images with high color counts to lower color counts, reducing file size (and bandwidth) without harming quality. It also has uses when reducing 48 or 64bpp RAW-format digital photos to 24bpp RGB for editing.},
	language = {en},
	urldate = {2024-04-19},
	journal = {tannerhelland.com},
	author = {Helland, Tanner},
	month = dec,
	year = {2012},
}

@misc{HomeassistantCoreHouse_with_garden,
	title = {home-assistant/core: :house\_with\_garden: {Open} source home automation that puts local control and privacy first.},
	url = {https://github.com/home-assistant/core},
	urldate = {2024-04-14},
}

@misc{AddSupportUserdefined,
	title = {Add support for user-defined healthchecks by talex5 ¬∑ {Pull} {Request} \#22719 ¬∑ moby/moby},
	url = {https://github.com/moby/moby/pull/22719},
	abstract = {This PR adds support for user-defined health-check probes for Docker containers. It adds a  HEALTHCHECK instruction to the Dockerfile syntax plus some corresponding "docker run" options. It can be ...},
	language = {en},
	urldate = {2024-04-13},
	journal = {GitHub},
}

@misc{farrellWillfarrellDockerautoheal2024,
	title = {willfarrell/docker-autoheal},
	copyright = {MIT},
	url = {https://github.com/willfarrell/docker-autoheal},
	abstract = {Monitor and restart unhealthy docker containers.},
	urldate = {2024-04-13},
	author = {Farrell, will},
	month = apr,
	year = {2024},
	note = {original-date: 2017-02-12T02:17:19Z},
	keywords = {docker},
}

@misc{NtfyShPush,
	title = {ntfy.sh {\textbar} {Push} notifications to your phone or desktop via {PUT}/{POST}},
	url = {https://ntfy.sh},
	abstract = {ntfy is a simple HTTP-based pub-sub notification service. It allows you to send notifications to your phone or desktop via scripts from any computer, and/or using a REST API.},
	language = {en},
	urldate = {2024-04-12},
	journal = {ntfy.sh},
}

@misc{ContainrrrWatchtower2024,
	title = {containrrr/watchtower},
	copyright = {Apache-2.0},
	url = {https://github.com/containrrr/watchtower},
	abstract = {A process for automating Docker container base image updates.},
	urldate = {2024-04-12},
	publisher = {containrrr},
	month = apr,
	year = {2024},
	note = {original-date: 2015-07-13T21:21:53Z},
	keywords = {automation, continuous-delivery, devops, docker, hacktoberfest, notifications, receive-notifications, registry, update-checker, watchtower},
}

@misc{WhyUseCompose0000,
	title = {Why use {Compose}?},
	url = {https://docs.docker.com/compose/intro/features-uses/},
	abstract = {Key benefits and use cases of Docker Compose},
	language = {en},
	urldate = {2024-04-11},
	journal = {Docker Documentation},
	year = {0000},
}

@misc{IntroductionImportmetaenv,
	title = {Introduction {\textbar} {Import}-meta-env},
	url = {https://import-meta-env.org/guide/getting-started/introduction.html},
	urldate = {2024-04-11},
}

@misc{WorkingDockerPnpm,
	title = {Working with {Docker} {\textbar} pnpm},
	url = {https://pnpm.io/docker},
	abstract = {It is impossible to create reflinks or hardlinks between a Docker container and the host filesystem during build time.},
	language = {en},
	urldate = {2024-04-11},
}

@misc{MultistageBuilds0100,
	title = {Multi-stage builds},
	url = {https://docs.docker.com/build/building/multi-stage/},
	abstract = {Learn about multi-stage builds and how you can use
them to improve your builds and get smaller images},
	language = {en},
	urldate = {2024-04-11},
	journal = {Docker Documentation},
	year = {0100},
}

@misc{DockerOverview0200,
	title = {Docker overview},
	url = {https://docs.docker.com/get-started/overview/},
	abstract = {Get an in-depth overview of the Docker platform including what it can be used for, the architecture it employs, and its underlying technology.},
	language = {en},
	urldate = {2024-04-11},
	journal = {Docker Documentation},
	year = {0200},
}

@misc{UsingSecretsGitHub,
	title = {Using secrets in {GitHub} {Actions}},
	url = {https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions},
	abstract = {Secrets allow you to store sensitive information in your organization, repository, or repository environments.},
	language = {en},
	urldate = {2024-04-11},
	journal = {GitHub Docs},
}

@misc{VuejsPinia2024,
	title = {vuejs/pinia},
	copyright = {MIT},
	url = {https://github.com/vuejs/pinia},
	abstract = {üçç Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support},
	urldate = {2024-04-10},
	publisher = {Vue},
	month = apr,
	year = {2024},
	note = {original-date: 2019-11-18T21:05:01Z},
	keywords = {composition-api, ssr, store, vue, vuex},
}

@misc{AxiosAxios2024,
	title = {axios/axios},
	copyright = {MIT},
	url = {https://github.com/axios/axios},
	abstract = {Promise based HTTP client for the browser and node.js},
	urldate = {2024-04-10},
	publisher = {axios},
	month = apr,
	year = {2024},
	note = {original-date: 2014-08-18T22:30:27Z},
	keywords = {hacktoberfest, http-client, javascript, nodejs, promise},
}

@misc{OptionalMultisegmentPath,
	title = {Optional and multi-segment path parameters ¬∑ {Issue} \#2653 ¬∑ {OAI}/{OpenAPI}-{Specification}},
	url = {https://github.com/OAI/OpenAPI-Specification/issues/2653},
	urldate = {2024-04-10},
}

@misc{OpenAPIToolsOpenapigeneratorOpenAPI,
	title = {{OpenAPITools}/openapi-generator: {OpenAPI} {Generator} allows generation of {API} client libraries ({SDK} generation), server stubs, documentation and configuration automatically given an {OpenAPI} {Spec} (v2, v3)},
	url = {https://github.com/OpenAPITools/openapi-generator},
	urldate = {2024-04-10},
}

@misc{PrimefacesPrimevueNext,
	title = {primefaces/primevue: {Next} {Generation} {Vue} {UI} {Component} {Library}},
	url = {https://github.com/primefaces/primevue},
	urldate = {2024-04-10},
}

@misc{TusenaiNaiveui2024,
	title = {tusen-ai/naive-ui},
	copyright = {MIT},
	url = {https://github.com/tusen-ai/naive-ui},
	abstract = {A Vue 3 Component Library. Fairly Complete. Theme Customizable. Uses TypeScript. Fast.},
	urldate = {2024-04-10},
	publisher = {tusen-ai},
	month = apr,
	year = {2024},
	note = {original-date: 2021-06-04T13:47:28Z},
	keywords = {component-library, ui-components, vue, vue-typescript, vue3-components},
}

@misc{VuetifyjsVuetify2024,
	title = {vuetifyjs/vuetify},
	copyright = {MIT},
	url = {https://github.com/vuetifyjs/vuetify},
	abstract = {üêâ Vue Component Framework},
	urldate = {2024-04-10},
	publisher = {vuetify},
	month = apr,
	year = {2024},
	note = {original-date: 2016-09-12T00:39:35Z},
	keywords = {javascript, material, material-components, material-design, material-theme, semantic, typescript, ui, ui-components, ui-design, ui-kit, ui-library, vue, vue-components, vue-material, vuejs, vuejs3, vuetify, vuetifyjs},
}

@misc{RadixvueRadixvue2024,
	title = {radix-vue/radix-vue},
	copyright = {MIT},
	url = {https://github.com/radix-vue/radix-vue},
	abstract = {Vue port of Radix UI Primitives. An open-source UI component library for building high-quality, accessible design systems and web apps.},
	urldate = {2024-04-10},
	publisher = {Radix Vue},
	month = apr,
	year = {2024},
	note = {original-date: 2023-06-22T11:08:02Z},
	keywords = {accessibility, accessible, component-library, design-system, headless, nuxt, primitives, radix-ui, ui, ui-components, ui-kit, vue, vue-component-library, vue-components, vue-radix},
}

@misc{RadixvueShadcnvue2024,
	title = {radix-vue/shadcn-vue},
	copyright = {MIT},
	url = {https://github.com/radix-vue/shadcn-vue},
	abstract = {Vue port of shadcn-ui},
	urldate = {2024-04-10},
	publisher = {Radix Vue},
	month = apr,
	year = {2024},
	note = {original-date: 2023-06-26T13:53:23Z},
	keywords = {accessible, component-libr, radix-vue, shadcn, shadcn-ui, ui-kit, ui-library, vue, vue-ui-kit},
}

@misc{MrlvsbKelvin2024,
	title = {mrlvsb/kelvin},
	copyright = {MIT},
	url = {https://github.com/mrlvsb/kelvin},
	abstract = {Kelvin - The Ultimate Code Examinator},
	urldate = {2024-04-10},
	publisher = {Media Research Lab @ VSB - Technical University of Ostrava},
	month = apr,
	year = {2024},
	note = {original-date: 2020-01-10T15:00:42Z},
	keywords = {assessment, evaluator, examinator, students},
}

@misc{SPASinglepageApplication2023,
	title = {{SPA} ({Single}-page application) - {MDN} {Web} {Docs} {Glossary}: {Definitions} of {Web}-related terms {\textbar} {MDN}},
	shorttitle = {{SPA} ({Single}-page application) - {MDN} {Web} {Docs} {Glossary}},
	url = {https://developer.mozilla.org/en-US/docs/Glossary/SPA},
	abstract = {An SPA (Single-page application) is a web app implementation that loads only a single web document, and then updates the body content of that single document via JavaScript APIs such as Fetch when different content is to be shown.},
	language = {en-US},
	urldate = {2024-04-10},
	month = dec,
	year = {2023},
}

@misc{VuejsCore2024,
	title = {vuejs/core},
	copyright = {MIT},
	url = {https://github.com/vuejs/core},
	abstract = {üññ Vue.js is a progressive, incrementally-adoptable JavaScript framework for building UI on the web.},
	urldate = {2024-04-10},
	publisher = {Vue},
	month = apr,
	year = {2024},
	note = {original-date: 2018-06-12T13:49:36Z},
}

@misc{QuasarframeworkQuasar2024,
	title = {quasarframework/quasar},
	copyright = {MIT},
	url = {https://github.com/quasarframework/quasar},
	abstract = {Quasar Framework - Build high-performance VueJS user interfaces in record time},
	urldate = {2024-04-10},
	publisher = {Quasar Framework},
	month = apr,
	year = {2024},
	note = {original-date: 2015-10-05T15:45:36Z},
	keywords = {android, browser-extension, electron, ios, javascript, material, material-components, material-design, material-theme, pwa, quasar-framework, server-side-rendering, ssr, vue, vue-component, vue-components, vue3, vuejs, vuejs3},
}

@misc{FastifyFastifyauth2024,
	title = {fastify/fastify-auth},
	url = {https://github.com/fastify/fastify-auth},
	abstract = {Run multiple auth functions in Fastify},
	urldate = {2024-04-10},
	publisher = {Fastify},
	month = apr,
	year = {2024},
	note = {original-date: 2017-07-08T09:47:16Z},
	keywords = {authentication, fastify, fastify-plugin, strategy-pattern},
}

@misc{althoffRanisaltNodeargon22024,
	title = {ranisalt/node-argon2},
	copyright = {MIT},
	url = {https://github.com/ranisalt/node-argon2},
	abstract = {Node.js bindings for Argon2 hashing algorithm},
	urldate = {2024-04-09},
	author = {Althoff, Ranieri},
	month = apr,
	year = {2024},
	note = {original-date: 2015-12-19T09:50:48Z},
	keywords = {argon2, crypto, encryption, hacktoberfest, hashing, nodejs, password},
}

@misc{PrismaPrisma2024,
	title = {prisma/prisma},
	copyright = {Apache-2.0},
	url = {https://github.com/prisma/prisma},
	abstract = {Next-generation ORM for Node.js \& TypeScript {\textbar} PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB},
	urldate = {2024-04-09},
	publisher = {Prisma},
	month = apr,
	year = {2024},
	note = {original-date: 2019-06-20T13:33:47Z},
	keywords = {cockroachdb, database, javascript, mariadb, mongo, mongodb, mongodb-orm, mssql, mysql, nodejs, orm, postgres, postgresql, prisma, prisma-client, query-builder, sql-server, sqlite, sqlserver, typescript},
}

@misc{MqttjsMQTTJs,
	title = {mqttjs/{MQTT}.js: {The} {MQTT} client for {Node}.js and the browser},
	url = {https://github.com/mqttjs/MQTT.js},
	urldate = {2024-04-09},
}

@misc{sinclairzx81Sinclairzx81Typebox2024,
	title = {sinclairzx81/typebox},
	url = {https://github.com/sinclairzx81/typebox},
	abstract = {Json Schema Type Builder with Static Type Resolution for TypeScript},
	urldate = {2024-04-09},
	author = {sinclairzx81},
	month = apr,
	year = {2024},
	note = {original-date: 2017-04-06T17:08:46Z},
	keywords = {ajv, json-schema, open-api, typecheck, typescript, validate},
}

@misc{FastifyFastify2024,
	title = {fastify/fastify},
	url = {https://github.com/fastify/fastify},
	abstract = {Fast and low overhead web framework, for Node.js},
	urldate = {2024-04-09},
	publisher = {Fastify},
	month = apr,
	year = {2024},
	note = {original-date: 2016-09-28T19:10:14Z},
	keywords = {nodejs, performance, speed, webframework},
}

@misc{fullerLovellSharp2024,
	title = {lovell/sharp},
	copyright = {Apache-2.0},
	url = {https://github.com/lovell/sharp},
	abstract = {High performance Node.js image processing, the fastest module to resize JPEG, PNG, WebP, AVIF and TIFF images. Uses the libvips library.},
	urldate = {2024-04-09},
	author = {Fuller, Lovell},
	month = apr,
	year = {2024},
	note = {original-date: 2013-08-19T20:24:24Z},
	keywords = {avif, crop, exif, icc, image, image-processing, javascript, jpeg, libvips, nodejs, performance, png, resize, sharp, svg, tiff, webp},
}

@misc{NonVolatileStorageLibrary,
	title = {Non-{Volatile} {Storage} {Library} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/storage/nvs_flash.html},
	urldate = {2024-04-07},
}

@misc{Inkplate10Washeda,
	title = {Inkplate 10, washed out colors ¬∑ {Issue} \#112 ¬∑ {SolderedElectronics}/{Inkplate}-{Arduino}-library},
	url = {https://github.com/SolderedElectronics/Inkplate-Arduino-library/issues/112},
	urldate = {2024-04-07},
}

@misc{TajnymagESPIDFInkPlateESPIDFInkPlate,
	title = {tajnymag/{ESP}-{IDF}-{InkPlate}: {ESP}-{IDF}-{InkPlate} fork with added esp-idf component registration support},
	url = {https://github.com/tajnymag/ESP-IDF-InkPlate},
	urldate = {2024-04-07},
}

@misc{Microservices,
	title = {Microservices},
	url = {https://martinfowler.com/articles/microservices.html},
	abstract = {Defining the microservices architectural style by describing their nine common characteristics},
	urldate = {2024-04-06},
	journal = {martinfowler.com},
	author = {Fowler, Martin and Lewis, James},
	month = mar,
	year = {2014},
}

@misc{MQTTEssentialsAll,
	title = {{MQTT} {Essentials} - {All} {Core} {Concepts} {Explained}},
	url = {https://www.hivemq.com/mqtt/},
	abstract = {MQTT Essentials: Learn the core concepts of MQTT, its features and other essential information about the protocol for IoT and IIoT.},
	language = {en},
	urldate = {2024-04-06},
	note = {Section: website},
}

@misc{MQTTStandardIoT,
	title = {{MQTT} - {The} {Standard} for {IoT} {Messaging}},
	url = {https://mqtt.org/},
	urldate = {2024-04-06},
}

@misc{Dithering,
	title = {Dithering},
	url = {https://imagej.github.io/plugins/dithering},
	abstract = {The ImageJ wiki is a community-edited knowledge base on topics relating to ImageJ, a public domain program for processing and analyzing scientific images, and its ecosystem of derivatives and variants, including ImageJ2, Fiji, and others.},
	urldate = {2024-04-05},
	journal = {ImageJ Wiki},
	note = {Section: Segmentation},
}

@misc{FeatureAddLightWaveform,
	title = {[feature] {Add} {lightWaveform} setting ¬∑ {Issue} \#12 ¬∑ turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate/issues/12},
	urldate = {2024-04-05},
}

@misc{InkplateArduinolibraryExamplesInkplate10,
	title = {Inkplate-{Arduino}-library/examples/{Inkplate10}/{Diagnostics}/{Inkplate10}\_Wavefrom\_EEPROM\_Programming/{Inkplate10}\_Wavefrom\_EEPROM\_Programming.ino at master ¬∑ {SolderedElectronics}/{Inkplate}-{Arduino}-library},
	url = {https://github.com/SolderedElectronics/Inkplate-Arduino-library/blob/master/examples/Inkplate10/Diagnostics/Inkplate10_Wavefrom_EEPROM_Programming/Inkplate10_Wavefrom_EEPROM_Programming.ino},
	urldate = {2024-04-05},
}

@misc{Inkplate10Washed,
	title = {Inkplate 10, washed out colors ¬∑ {Issue} \#112 ¬∑ {SolderedElectronics}/{Inkplate}-{Arduino}-library},
	url = {https://github.com/SolderedElectronics/Inkplate-Arduino-library/issues/112},
	abstract = {First - thank you a lot for the making Inkplate, it really helps starting with eink projects! Although, I do have problem with mine, and I'm not sure if I'm doing something wrong. It seems like gra...},
	language = {en},
	urldate = {2024-04-05},
	journal = {GitHub},
}

@misc{WaveformsTableIntroduction,
	title = {Waveforms table introduction {\textbar} {Details} {\textbar} {Hackaday}.io},
	url = {https://hackaday.io/project/21168-fpga-eink-controller/log/57302-waveforms-table-introduction},
	abstract = {{\textless}p{\textgreater}With eink display, you cannot just send \&quot;set pixel black\&quot;, \&quot;set pixel white\&quot; or \&quot;set pixel grey\&quot;, the brightness of display depend on a sequence of voltage applied for a certain time on pixel.{\textless}/p{\textgreater}{\textless}p{\textgreater}The table found in \&quot;Source driver\&quot; section on Essential Scrap site  is incomplete, when you send 0b10, you do not actually set pixel white, you apply a voltage to set the pixel lighter, and 0b01 to set the pixel darker. It is why in his implementation, Petteri must apply multiple times the value to obtain the wanted color and apply the voltage longer than the screen can achieve.{\textless}span class="redactor-invisible-space"{\textgreater}{\textless}/span{\textgreater} This approch will works, but the problem is it will be pretty slow when you want to update the screen.{\textless}/p{\textgreater}{\textless}p{\textgreater}To get around that and get better result, eink manufacturer introduce what they call \&quot;waveforms table\&quot;. This table describes the transition you must apply to obtain the faster results to go from one color to another.{\textless}/p{\textgreater}{\textless}p{\textgreater} An example if you want to go from white to black, they can say that you will achieve that in 4 clock cycle in the form of 0b10 0b01 0b01 0b01, to go from grey to darker grey, the table can be},
	language = {en},
	urldate = {2024-04-05},
	author = {Boulnois, Julien},
}

@article{kleinPristupovySystemZalozeny2019,
	title = {P≈ô√≠stupov√Ω syst√©m zalo≈æen√Ω na {ESP32}},
	copyright = {openAccess},
	url = {http://dspace.vsb.cz/handle/10084/136366},
	abstract = {Tato bakal√°≈ôsk√° pr√°ce se zab√Ωv√° implementac√≠ nov√© ƒç√°sti SW pro p≈ô√≠stupov√Ω syst√©m na V≈†B{\textasciitilde}‚Äì{\textasciitilde}Technick√© univerzitƒõ Ostrava, FEI. Nov√Ω p≈ô√≠stupov√Ω syst√©m podporuje technologii RFID a bezpeƒçnƒõj≈°√≠ technologii NFC. Implementuje tak√© pou≈æit√≠ E-Ink displeje. Je vytvo≈ôen nov√Ω komunikaƒçn√≠ protokol pro komunikaci dvou modul≈Ø v{\textasciitilde}syst√©mu. Syst√©m podporuje autokonfiguraci pomoc√≠ protokolu DHCP.},
	language = {cs},
	urldate = {2024-04-04},
	author = {Klein, Luk√°≈°},
	year = {2019},
	note = {Accepted: 2019-06-26T04:35:30Z
Publisher: Vysok√° ≈°kola b√°≈àsk√° - Technick√° univerzita Ostrava},
}

@misc{venemoWhyDoesIostream2016,
	type = {Forum post},
	title = {Why does iostream take so much flash space on an {MCU}?},
	url = {https://stackoverflow.com/q/38936131},
	urldate = {2024-04-04},
	journal = {Stack Overflow},
	author = {Venemo},
	month = aug,
	year = {2016},
}

@misc{AnyWayStrip,
	title = {Any way to strip {C}/{C}++ locale stuff out of the binary? - {ESP32} {Forum}},
	url = {https://www.esp32.com/viewtopic.php?t=6335},
	urldate = {2024-04-04},
}

@misc{MinimizingBinarySize,
	title = {Minimizing {Binary} {Size} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-guides/performance/size.html},
	urldate = {2024-04-04},
}

@misc{SolderedElectronicsInkplatemicropython2024,
	title = {{SolderedElectronics}/{Inkplate}-micropython},
	copyright = {MIT},
	url = {https://github.com/SolderedElectronics/Inkplate-micropython},
	abstract = {Micropython driver for Inkplate boards},
	urldate = {2024-04-04},
	publisher = {Soldered Electronics},
	month = mar,
	year = {2024},
	note = {original-date: 2020-09-17T12:36:14Z},
}

@misc{RenameINKPLATE_2BITINKPLATE_3BIT,
	title = {Rename {INKPLATE}\_2BIT to {INKPLATE}\_3BIT by bantic ¬∑ {Pull} {Request} \#1 ¬∑ {SolderedElectronics}/{Inkplate}-micropython},
	url = {https://github.com/SolderedElectronics/Inkplate-micropython/pull/1},
	abstract = {The documentation refers to INKPLATE\_3BIT (for example, here: https://inkplate.readthedocs.io/en/latest/micropython.html\#selectdisplaymode), but the library calls the variable INKPLATE\_2BIT. This c...},
	language = {en},
	urldate = {2024-04-04},
	journal = {GitHub},
}

@misc{MenuconfigVariantSelection,
	title = {Menuconfig variant selection + {Certificate} bundling by tajnymag ¬∑ {Pull} {Request} \#10 ¬∑ turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate/pull/10},
	abstract = {added Kconfig to the root of the repository for our own menuconfig screen
updated Native-IDF example to use variables from menuconfig instead of manual editing of CMakeLists
updated Native-DF READM...},
	language = {en},
	urldate = {2024-04-03},
	journal = {GitHub},
}

@misc{PullRequestsTurgu1,
	title = {Pull requests ¬∑ turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate},
	abstract = {A porting effort  to the ESP-IDF framework for the e-Radionica InkPlate software. - Pull requests ¬∑ turgu1/ESP-IDF-InkPlate},
	language = {en},
	urldate = {2024-04-03},
	journal = {GitHub},
}

@misc{PeripheralsESP32S2ESPIDF,
	title = {Peripherals - {ESP32}-{S2} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.0 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/v5.0/esp32s2/migration-guides/release-5.x/peripherals.html},
	urldate = {2024-04-03},
}

@misc{StorageESP32S2ESPIDF,
	title = {Storage - {ESP32}-{S2} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.0 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/v5.0/esp32s2/migration-guides/release-5.x/storage.html},
	urldate = {2024-04-03},
}

@article{jtcDedeprecatingVolatileCompound,
	title = {De-deprecating volatile compound operations},
	language = {en},
	author = {Jtc, Iso},
}

@misc{MigrationESP32ESPIDF,
	title = {Migration from 4.4 to 5.0 - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/migration-guides/release-5.x/5.0/index.html},
	urldate = {2024-04-03},
}

@misc{WIPInitialSupport,
	title = {{WIP}: {Initial} support for esp-idf v5.0 by tajnymag ¬∑ {Pull} {Request} \#14 ¬∑ turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate/pull/14},
	urldate = {2024-04-03},
}

@misc{turcotteTurgu1ESPIDFInkPlate2024a,
	title = {turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate},
	abstract = {A porting effort  to the ESP-IDF framework for the e-Radionica InkPlate software.},
	urldate = {2024-04-03},
	author = {Turcotte, Guy},
	month = mar,
	year = {2024},
	note = {original-date: 2020-12-23T13:56:00Z},
}

@misc{WhatPlatformIOPlatformIO,
	title = {What is {PlatformIO}? ‚Äî {PlatformIO} latest documentation},
	url = {https://docs.platformio.org/en/latest/what-is-platformio.html},
	urldate = {2024-04-03},
}

@misc{turcotteTurgu1EPubInkPlate2024,
	title = {turgu1/{EPub}-{InkPlate}},
	url = {https://github.com/turgu1/EPub-InkPlate},
	abstract = {An EPub Reader for the ESP32 based InkPlate e-Ink devices.},
	urldate = {2024-04-03},
	author = {Turcotte, Guy},
	month = apr,
	year = {2024},
	note = {original-date: 2020-10-25T19:44:04Z},
	keywords = {epub, esp32, inkplate},
}

@misc{ESPIDFInkPlateREADMEMd,
	title = {{ESP}-{IDF}-{InkPlate}/{README}.md at ea4d20b7703d1eceee3a35af15ceab07cef01eb0 ¬∑ turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate/blob/ea4d20b7703d1eceee3a35af15ceab07cef01eb0/README.md},
	urldate = {2024-04-03},
	author = {Turcotte, Guy},
}

@article{plauskaPerformanceEvaluationMicroPython2022,
	title = {Performance {Evaluation} of {C}/{C}++, {MicroPython}, {Rust} and {TinyGo} {Programming} {Languages} on {ESP32} {Microcontroller}},
	volume = {12},
	copyright = {https://creativecommons.org/licenses/by/4.0/},
	issn = {2079-9292},
	url = {https://www.mdpi.com/2079-9292/12/1/143},
	doi = {10.3390/electronics12010143},
	abstract = {The rapid growth of the Internet of Things (IoT) and its applications requires high computational efficiency, low-cost, and low-power solutions for various IoT devices. These include a wide range of microcontrollers that are used to collect, process, and transmit IoT data. ESP32 is a microcontroller with built-in wireless connectivity, suitable for various IoT applications. The ESP32 chip is gaining more popularity, both in academia and in the developer community, supported by a number of software libraries and programming languages. While low- and middle-level languages, such as C/C++ and Rust, are believed to be the most efficient, TinyGo and MicroPython are more developer-friendly low-complexity languages, suitable for beginners and allowing more rapid coding. This paper evaluates the efficiency of the available ESP32 programming languages, namely C/C++, MicroPython, Rust, and TinyGo, by comparing their execution performance. Several popular data and signal processing algorithms were implemented in these languages, and their execution times were compared: Fast Fourier Transform (FFT), Cyclic Redundancy Check (CRC), Secure Hash Algorithm (SHA), Infinite Impulse Response (IIR), and Finite Impulse Response (FIR) filters. The results show that the C/C++ implementations were fastest in most cases, closely followed by TinyGo and Rust, while MicroPython programs were many times slower than implementations in other programming languages. Therefore, the C/C++, TinyGo, and Rust languages are more suitable when execution and response time are the key factors, while Python can be used for less strict system requirements, enabling a faster and less complicated development process.},
	language = {en},
	number = {1},
	urldate = {2024-04-03},
	journal = {Electronics},
	author = {Plauska, Ignas and Liutkeviƒçius, Agnius and Janaviƒçi≈´tƒó, Audronƒó},
	month = dec,
	year = {2022},
	pages = {143},
}

@misc{PyboardPyTool,
	title = {The pyboard.py tool ‚Äî {MicroPython} latest documentation},
	url = {https://docs.micropython.org/en/latest/reference/pyboard.py.html},
	urldate = {2024-04-03},
}

@misc{WorkingFilesystemsMicroPython,
	title = {Working with filesystems ‚Äî {MicroPython} latest documentation},
	url = {https://docs.micropython.org/en/latest/reference/filesystem.html},
	urldate = {2024-04-03},
}

@misc{MicroPythonPythonMicrocontrollers,
	title = {{MicroPython} - {Python} for microcontrollers},
	url = {http://micropython.org/},
	abstract = {MicroPython is a lean and efficient
        implementation of the Python 3 programming language
        that includes a small subset of the Python standard library and is
        optimised to run on microcontrollers and in constrained environments.},
	language = {en},
	urldate = {2024-04-02},
}

@misc{ReleasesEspressifArduinoesp32,
	title = {Releases ¬∑ espressif/arduino-esp32},
	url = {https://github.com/espressif/arduino-esp32/releases},
	abstract = {Arduino core for the ESP32. Contribute to espressif/arduino-esp32 development by creating an account on GitHub.},
	language = {en},
	urldate = {2024-04-02},
	journal = {GitHub},
}

@misc{turcotteTurgu1ESPIDFInkPlate2024,
	title = {turgu1/{ESP}-{IDF}-{InkPlate}},
	url = {https://github.com/turgu1/ESP-IDF-InkPlate},
	abstract = {A porting effort  to the ESP-IDF framework for the e-Radionica InkPlate software.},
	urldate = {2024-04-02},
	author = {Turcotte, Guy},
	month = mar,
	year = {2024},
	note = {original-date: 2020-12-23T13:56:00Z},
}

@misc{SolderedElectronicsInkplatemicropythonMicropython,
	title = {{SolderedElectronics}/{Inkplate}-micropython: {Micropython} driver for {Inkplate} boards},
	url = {https://github.com/SolderedElectronics/Inkplate-micropython},
	urldate = {2024-04-02},
}

@misc{SolderedElectronicsInkplateArduinolibrary2024,
	title = {{SolderedElectronics}/{Inkplate}-{Arduino}-library},
	copyright = {LGPL-3.0},
	url = {https://github.com/SolderedElectronics/Inkplate-Arduino-library},
	abstract = {Inkplate family Arduino library. The easiest way to add e-paper to your project.},
	urldate = {2024-04-02},
	publisher = {Soldered Electronics},
	month = mar,
	year = {2024},
	note = {original-date: 2019-12-15T12:50:26Z},
	keywords = {arduino, e-ink, e-paper},
}

@misc{espressifsystemsArduinoESPIDFComponent,
	title = {Arduino as an {ESP}-{IDF} component - - ‚Äî {Arduino} {ESP32} latest documentation},
	url = {https://docs.espressif.com/projects/arduino-esp32/en/latest/esp-idf_component.html#tip},
	urldate = {2024-04-02},
	author = {{Espressif Systems}},
}

@misc{Arduino,
	title = {About {Arduino}},
	url = {https://www.arduino.cc/en/about},
	abstract = {Arduino‚Äôs mission is to enable anyone to enhance their lives through accessible electronics and digital technologies.},
	language = {en},
	urldate = {2024-04-02},
	author = {{Arduino}},
}

@misc{WhatArduino,
	title = {What is {Arduino}?},
	url = {https://www.arduino.cc/en/Guide/Introduction},
	abstract = {Open-source electronic prototyping platform enabling users to create interactive electronic objects.},
	language = {en},
	urldate = {2024-04-02},
	author = {{Arduino}},
}

@misc{SolderedElectronicsInkplatePeripheralModeRaspberryPiExample2023,
	title = {{SolderedElectronics}/{Inkplate}-{Peripheral}-{Mode}-{Raspberry}-{Pi}-{Example}},
	copyright = {GPL-3.0},
	url = {https://github.com/SolderedElectronics/Inkplate-Peripheral-Mode-Raspberry-Pi-Example},
	abstract = {Some example code for how to drive Inkplate with a Raspberry Pi using peripheral mode},
	urldate = {2024-03-28},
	publisher = {Soldered Electronics},
	author = {Soriƒá, Robert},
	month = sep,
	year = {2023},
	note = {original-date: 2023-09-05T20:11:45Z},
}

@misc{solderedelectronicsInkplatePeripheralMode,
	title = {3.1. {Inkplate} {Peripheral} {Mode} ‚Äî {Inkplate} docs documentation},
	url = {https://inkplate.readthedocs.io/en/latest/peripheral-mode.html},
	urldate = {2024-03-28},
	author = {{Soldered Electronics}},
}

@misc{einkholdingsinc.ElectronicInkInk,
	title = {Electronic {Ink} {\textbar} {E} {Ink} {Technology}},
	url = {https://www.eink.com/tech/detail/How_it_works},
	abstract = {E Ink Holdings Inc. (8069.TWO), based on technology from MIT‚Äôs Media Lab, is an ideal display medium for applications spanning eReaders and eNotes, retail, home, hospital, transportation and more, enabling customers to put displays in locations previously impossible. E Ink‚Äôs electrophoretic display products make it the worldwide leader for ePaper. It‚Äôs low power displays enable customers to reach their sustainability goals, and E Ink has pledged using 100\% renewable energy in 2030 and reaching net zero carbon emissions by 2040. E Ink is a member of the Climate Pledge, has joined the Science Based Targets Initiative (SBTi), and has been listed as one of the Asia-Pacific Climate Leaders by the Financial Times, Nikkei and Statista in 2022.  Listed in Taiwan's Taipei Exchange (TPEx) and the Luxembourg market, E Ink Holdings is now the world's largest supplier of ePaper displays.},
	language = {zh-TW},
	urldate = {2024-03-25},
	journal = {Electronic Ink {\textbar} E Ink Technology},
	author = {{E INK HOLDINGS INC.}},
}

@misc{adafruitindustriesTHINKINKHow2020,
	title = {{THINK} {INK} - {How} {Grayscale} {Eink} {Works} \#adafruit \#thinkink},
	url = {https://www.youtube.com/watch?v=CuFaQ7AvX88},
	abstract = {http://adafruit.com/thinkink
Learn how grayscale EPDs electronically mix pigments to create multiple shades 

Visit the Adafruit shop online - http://www.adafruit.com

-----------------------------------------
LIVE CHAT IS HERE! http://adafru.it/discord

Adafruit on Instagram: ¬†¬†/¬†adafruit¬†¬†

Subscribe to Adafruit on YouTube: http://adafru.it/subscribe

New tutorials on the Adafruit Learning System: http://learn.adafruit.com/
-----------------------------------------},
	urldate = {2024-03-25},
	author = {{Adafruit Industries}},
	year = {2020},
}

@article{heikenfeldReviewPaperCritical2011,
	title = {\textit{{Review} {Paper}} : {A} critical review of the present and future prospects for electronic paper},
	volume = {19},
	issn = {1071-0922, 1938-3657},
	shorttitle = {\textit{{Review} {Paper}}},
	url = {https://sid.onlinelibrary.wiley.com/doi/10.1889/JSID19.2.129},
	doi = {10.1889/JSID19.2.129},
	abstract = {Abstract‚Äî
              The commercial success of monochrome electronic paper (e‚ÄêPaper) is now propelling the development of next‚Äêgeneration flexible, video, and color e‚ÄêPaper products. Unlike the early battles in the 1980s and 1990s between transmissive and emissive display technologies, there is a extraordinary diversity of technologies vying to become the next generation of e‚ÄêPaper. A critical review of all major e‚ÄêPaper technologies, including a technical breakdown of the performance limitations based on device physics and commentary on possible future breakthroughs, is presented. In addition, the visual requirements for color e‚ÄêPaper are provided and compared to standards used in conventional print. It is concluded that researchers have much work remaining in order to bridge the significant gap between reflective electronic displays and print‚Äêon‚Äêpaper.},
	language = {en},
	number = {2},
	urldate = {2024-03-25},
	journal = {Journal of the Society for Information Display},
	author = {Heikenfeld, Jason and Drzaic, Paul and Yeo, Jong‚ÄêSouk and Koch, Tim},
	month = feb,
	year = {2011},
	pages = {129--156},
}

@techreport{esp32_datasheet,
	address = {Shanghai, China},
	type = {manual},
	title = {{ESP32} series datasheet},
	url = {https://www.espressif.com},
	institution = {Espressif Systems},
	author = {{Espressif Systems}},
	month = mar,
	year = {2024},
	note = {Edition: 4.5},
}

@misc{espressifProductOverviewESP32,
	title = {Product {Overview} - {ESP32} - ‚Äî {ESP} {Hardware} {Design} {Guidelines} latest documentation},
	url = {https://docs.espressif.com/projects/esp-hardware-design-guidelines/en/latest/esp32/product-overview.html},
	urldate = {2024-03-21},
	author = {{Espressif Systems}},
}

@misc{espressifPOSIXThreadsSupport,
	title = {{POSIX} {Threads} {Support} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} latest documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/pthread.html},
	urldate = {2024-03-24},
	author = {{Espressif Systems}},
}

@misc{espressifGettingStartedArduino,
	title = {Getting {Started} - - ‚Äî {Arduino} {ESP32} latest documentation},
	url = {https://docs.espressif.com/projects/arduino-esp32/en/latest/getting_started.html},
	urldate = {2024-03-24},
	author = {{Espressif Systems}},
}

@misc{FreeRTOSOverviewESP32,
	title = {{FreeRTOS} {Overview} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/freertos.html},
	urldate = {2024-03-21},
	author = {{Espressif Systems}},
}

@misc{espressifEspressifNamedCool,
	title = {Espressif {Named} ‚Äú{Cool} {Vendor}‚Äù in {IoT} 2016 by {Gartner} {\textbar} {Espressif} {Systems}},
	url = {https://www.espressif.com/en/news/gartner-cool-cendor},
	abstract = {Espressif is cool for two small reasons: low cost, and a complete Wi-Fi enabled controller on a board about the size of a postage stamp.},
	language = {en},
	urldate = {2024-03-21},
	author = {{Espressif Systems}},
}

@misc{espressifEspressifLeadsIoT,
	title = {Espressif {Leads} the {IoT} {Chip} {Market} with {Over} 1 {Billion} {Shipments} {Worldwide} {\textbar} {Espressif} {Systems}},
	url = {https://www.espressif.com/en/news/1_Billion_Chip_Sales},
	abstract = {Espressif‚Äôs cutting-edge technologies earn a leading market position, as its global shipment of wireless connectivity chips surpasses the one billion milestone since the launch of ESP8266.},
	language = {en},
	urldate = {2024-03-21},
	author = {{Espressif Systems}},
}

@misc{espressifEspressifAnnouncesLaunch,
	title = {Espressif {Announces} the {Launch} of {ESP32} {Cloud} on {Chip} and {Funding} by {Fosun} {Group} {\textbar} {Espressif} {Systems}},
	url = {https://www.espressif.com/en/media_overview/news/20160907-esp32briefing},
	abstract = {Espressif announces the launch of ESP32 Cloud on Chip and a Series B round of funding led by Fosun Group.},
	language = {en},
	urldate = {2024-03-24},
	author = {{Espressif Systems}},
}

@misc{espressifSupportESP32ESPIDF,
	title = {C++ {Support} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-guides/cplusplus.html},
	urldate = {2024-03-24},
	author = {{Espressif Systems}},
}

@misc{espressifAPIGuidesESP32,
	title = {{API} {Guides} - {ESP32} - ‚Äî {ESP}-{IDF} {Programming} {Guide} v5.2.1 documentation},
	url = {https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-guides/index.html},
	urldate = {2024-03-24},
	author = {{Espressif Systems}},
}

@misc{espressifEspressifEspressifSystems,
	title = {About {Espressif} {\textbar} {Espressif} {Systems}},
	url = {https://www.espressif.com/en/company/about-espressif},
	urldate = {2024-03-21},
	author = {{Espressif Systems}},
}
